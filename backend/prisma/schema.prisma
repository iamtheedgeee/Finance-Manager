// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db { 
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id                String    @id @default(uuid())
  username          String    @unique
  email             String    @unique
  password          String
  refreshToken      String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt


  accounts          Account[]
  categories        Category[]
  transactions      Transaction[]
  budegets          Budget[]  
}

model Account{
  id                String    @id @default(uuid())
  userId            String
  name              String
  type              AccountType
  balance           Float     @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  user              User      @relation(fields: [userId], references:[id])
  transactions      Transaction[]

  isActive          Boolean    @default(true)
  deletedAt         DateTime?

  @@unique([userId, name])
}

model Category{
  id                String    @id @default(uuid())
  userId            String
  name              String
  type              CategoryType
  
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  isActive          Boolean    @default(true)
  deletedAt         DateTime?

  user              User      @relation(fields: [userId], references:[id])
  transactions      Transaction[]
  budget            Budget?

}

model Transaction{
  id                String    @id @default(uuid())
  userId            String
  accountId         String
  categoryId        String
  amount            Float
  date              DateTime  @default(now())
  notes             String?

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  isActive          Boolean    @default(true)
  deletedAt         DateTime?

  user              User      @relation(fields: [userId], references:[id])
  account           Account   @relation(fields: [accountId], references: [id])
  category          Category  @relation(fields: [categoryId], references: [id])
}

model Budget{
  id                String  @id @default(uuid())
  userId            String
  categoryId        String  @unique
  limit             Float
  startDate         DateTime
  endDate           DateTime

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  user              User        @relation(fields: [userId], references: [id])
  category          Category    @relation(fields: [categoryId], references: [id])
}

enum CategoryType{
  INCOME
  EXPENSE
}

enum AccountType{
  BANK
  CASH
}